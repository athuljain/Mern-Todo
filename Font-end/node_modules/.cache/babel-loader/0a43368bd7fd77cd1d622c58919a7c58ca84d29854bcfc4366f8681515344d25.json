{"ast":null,"code":"var _jsxFileName = \"D:\\\\Soften\\\\TodoFullStack\\\\Font-end\\\\src\\\\Component\\\\TodoHome.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoHome() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n\n  // Fetch all todos from the backend when the component mounts\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('/api/todos'); // Assuming your backend API is served at /api/todos\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n  console.log(\"todo\", to);\n  const handleCreateTodo = async () => {\n    try {\n      const response = await axios.post('http://localhost:8080/todo/', {\n        todo: newTodo\n      }); // Assuming your backend API is served at /api/todos\n      setTodos([...todos, response.data]);\n      setNewTodo('');\n    } catch (error) {\n      console.error('Error creating todo:', error);\n    }\n  };\n  const handleDeleteTodo = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/todos/${id}`); // Assuming your backend API is served at /api/todos\n      setTodos(todos.filter(todo => todo._id !== id));\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value),\n      placeholder: \"Enter todo...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.todo, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTodo(todo._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, todo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoHome, \"5IWrR3qlB9fd4Xrb4YgyFMm9peE=\");\n_c = TodoHome;\nvar _c;\n$RefreshReg$(_c, \"TodoHome\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TodoHome","_s","todos","setTodos","newTodo","setNewTodo","fetchTodos","response","get","data","error","console","log","to","handleCreateTodo","post","todo","handleDeleteTodo","id","delete","filter","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["D:/Soften/TodoFullStack/Font-end/src/Component/TodoHome.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function TodoHome() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [newTodo, setNewTodo] = useState('');\r\n\r\n  // Fetch all todos from the backend when the component mounts\r\n  useEffect(() => {\r\n    fetchTodos();\r\n  }, []);\r\n\r\n  const fetchTodos = async () => {\r\n    try {\r\n      const response = await axios.get('/api/todos'); // Assuming your backend API is served at /api/todos\r\n      setTodos(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching todos:', error);\r\n    }\r\n\r\n  };\r\n  console.log(\"todo\",to);\r\n\r\n  const handleCreateTodo = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/todo/', { todo: newTodo }); // Assuming your backend API is served at /api/todos\r\n      setTodos([...todos, response.data]);\r\n      setNewTodo('');\r\n    } catch (error) {\r\n      console.error('Error creating todo:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTodo = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:8080/todos/${id}`); // Assuming your backend API is served at /api/todos\r\n      setTodos(todos.filter(todo => todo._id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting todo:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Todo List</h1>\r\n      <input \r\n        type=\"text\" \r\n        value={newTodo} \r\n        onChange={(e) => setNewTodo(e.target.value)} \r\n        placeholder=\"Enter todo...\" \r\n      />\r\n      <button onClick={handleCreateTodo}>Add Todo</button>\r\n\r\n      <ul>\r\n        {todos.map(todo => (\r\n          <li key={todo._id}>\r\n            {todo.todo}\r\n            <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}